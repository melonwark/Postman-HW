{
	"info": {
		"_postman_id": "0bcaa0fa-06cc-40b6-8531-1d3a82ec19a9",
		"name": "30Group postman HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20293853"
	},
	"item": [
		{
			"name": "first.(1-3)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.(1-12)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Объявляем переменные\r",
							"let jsonData = pm.response.json();\r",
							"let reqData = request.data\r",
							"//проверяем name\r",
							"pm.test(\"Name is right\", function () {\r",
							"        pm.expect(jsonData.name).to.eql('Sema');\r",
							"});\r",
							"//Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test(\"Age is right\", function () {\r",
							"        pm.expect(jsonData.age).to.eql('15');\r",
							"});\r",
							"//Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test(\"Salary is right\", function () {\r",
							"        pm.expect(jsonData.salary).to.eql(1700);\r",
							"});\r",
							"//теперь берем из request\r",
							"//Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Name is right\", function () {\r",
							"        pm.expect(jsonData.name).to.eql(reqData.name);\r",
							"});\r",
							"//Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Age is right\", function () {\r",
							"        pm.expect(jsonData.age).to.eql(reqData.age);\r",
							"});\r",
							"//Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Salary is right\", function () {\r",
							"        pm.expect(+jsonData.salary).to.eql(+reqData.salary);\r",
							"});\r",
							"\r",
							"console.log(jsonData.family)\r",
							"\r",
							"pm.test(\"Salary 1_5 year eql to salary x4\", function () {\r",
							"        pm.expect(jsonData.family.u_salary_1_5_year).to.eql(4 * +reqData.salary);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Sema",
							"type": "text"
						},
						{
							"key": "age",
							"value": "15",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1700",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "3.(1-12)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json()\r",
							"let reqData = pm.request.url.query.toObject()\r",
							"\r",
							"pm.test(\"Name is right\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(reqData.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Age is right\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(reqData.age);\r",
							"});\r",
							"pm.test(\"Salary is right\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(Number(reqData.salary));\r",
							"});\r",
							"\r",
							"console.log(jsonData.family)\r",
							"\r",
							"pm.test('The dog have name', function (){\r",
							"    pm.expect(JSON.stringify(jsonData.family.pets.dog)).to.include('name')\r",
							"})\r",
							"\r",
							"\r",
							"pm.test('The dog have age', function (){\r",
							"    pm.expect(JSON.stringify(jsonData.family.pets.dog)).to.include('age')\r",
							"})\r",
							"\r",
							"pm.test('The dog name is Luky', function (){\r",
							"    pm.expect(jsonData.family.pets.dog.name).to.eql('Luky')\r",
							"})\r",
							"\r",
							"pm.test('The dog age is 4', function (){\r",
							"    pm.expect(JSON.stringify(jsonData.family.pets.dog.age)).to.include(4)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Sema&age=15&salary=1700",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Sema"
						},
						{
							"key": "age",
							"value": "15"
						},
						{
							"key": "salary",
							"value": "1700"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "4.(1-21)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"let reqData = pm.request.url.query.toObject();\r",
							"\r",
							"pm.test(\"Name is right\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(reqData.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Age is right\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(+reqData.age);\r",
							"});\r",
							"\r",
							"console.log(reqData.salary)\r",
							"\r",
							"console.log(jsonData.salary)\r",
							"\r",
							"console.log(jsonData.salary[0])\r",
							"\r",
							"console.log(jsonData.salary[1])\r",
							"\r",
							"console.log(jsonData.salary[2])\r",
							"\r",
							"pm.test(\"Salary is right\", function () {\r",
							"    pm.expect(+jsonData.salary[0]).to.eql(+reqData.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Salary*2 is right\", function () {\r",
							"    pm.expect(+jsonData.salary[1]).to.eql(2*reqData.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Salary*3 is right\", function () {\r",
							"    pm.expect(+jsonData.salary[2]).to.eql(3*reqData.salary);\r",
							"});\r",
							"//Создаем и передаем переменные в окружение\r",
							"\r",
							"\r",
							"pm.environment.set(\"name\", jsonData.name);\r",
							"\r",
							"pm.environment.set(\"age\", jsonData.age);\r",
							"\r",
							"pm.environment.set(\"salary\", jsonData.salary[0]);\r",
							"\r",
							"jsonData.salary.forEach(el => console.log(el));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Sema&age=15&salary=1700",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Sema"
						},
						{
							"key": "age",
							"value": "15"
						},
						{
							"key": "salary",
							"value": "1700"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "5.(1-22)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json()\r",
							"\r",
							"let reqData = request.data\r",
							"\r",
							"pm.test('Qa salary after 6 months check', () => {\r",
							"pm.expect(jsonData).to.have.any.keys('qa_salary_after_6_months')\r",
							"})\r",
							"\r",
							"pm.test('Qa salary after 12 months check', () => {\r",
							"pm.expect(jsonData).to.have.any.keys('qa_salary_after_12_months')\r",
							"})\r",
							"\r",
							"pm.test('Qa salary after 1.5 year check', () => {\r",
							"pm.expect(jsonData).to.have.any.keys('qa_salary_after_1.5_year')\r",
							"})\r",
							"\r",
							"pm.test('Qa salary after 3.5 year check', () => {\r",
							"pm.expect(jsonData).to.have.any.keys('qa_salary_after_3.5_years')\r",
							"})\r",
							"\r",
							"pm.test('Response have key: person', () => {\r",
							"pm.expect(jsonData).to.have.any.keys('person')\r",
							"})\r",
							"\r",
							"pm.test('Salary is right', () => {\r",
							"pm.expect(jsonData.start_qa_salary).to.eql(+reqData.salary)\r",
							"})\r",
							"\r",
							"pm.test('Salary*2 is right', () => {\r",
							"pm.expect(jsonData.qa_salary_after_6_months).to.eql(reqData.salary*2)\r",
							"})\r",
							"\r",
							"pm.test('Salary*2.7 is right', () => {\r",
							"pm.expect(jsonData.qa_salary_after_12_months).to.eql(reqData.salary*2.7)\r",
							"})\r",
							"\r",
							"pm.test('Salary*3.3 is right', () => {\r",
							"pm.expect(jsonData['qa_salary_after_1.5_year']).to.eql(reqData.salary*3.3)\r",
							"})\r",
							"\r",
							"pm.test('Salary*3.8 is right', () => {\r",
							"pm.expect(jsonData['qa_salary_after_3.5_years']).to.eql(reqData.salary*3.8)\r",
							"})\r",
							"\r",
							"pm.test('Salary is eql to Sema salary', () => {\r",
							"pm.expect(jsonData.person.u_name[1]).to.eql(+reqData.salary)\r",
							"})\r",
							"\r",
							"pm.test('Age is eql to Sema age\\'s', () => {\r",
							"pm.expect(jsonData.person.u_age).to.eql(+reqData.age)\r",
							"})\r",
							"\r",
							"pm.test('Salary after 5 years is right', () => {\r",
							"pm.expect(jsonData.person.u_salary_5_years).to.eql(4.2*reqData.salary)\r",
							"})\r",
							"\r",
							"for (let key in jsonData.person) {\r",
							"    console.log(`${key} - ${jsonData.person[key]}`)\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}